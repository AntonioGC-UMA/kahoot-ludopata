{"version":3,"sources":["grid.js","socket.js","pantalla-inicio.js","pantalla-espera.js","pantalla-resultados.js","pantalla-pregunta.js","pantalla-respuesta.js","pantalla-reto.js","index.js"],"names":["Timer","time","style","background","position","top","right","width","height","Grid","columnas","children","display","gridTemplateColumns","gridGap","socket","io","Inicio","personas","conectados","setId","setEstado","movil","useMediaQuery","query","portrait","useEffect","once","e","map","elem","disponible","includes","onClick","emit","aspectRatio","textDecoration","Espera","isHost","useState","pool","setPool","tipos","setTipos","fetch","then","response","json","data","on","desconectar","off","onChange","event","target","value","Resultados","resultados","empatados","sort","a","b","votos","max","unidad","window","innerWidth","quedanPreguntas","setQuedanPreguntas","hayEmpatePersonalizado","sethayEmpatePersonalizado","scrollTo","property","nombre","join","hasOwnProperty","flexDirection","idx","textAlign","margin","borderRadius","length","Pregunta","pregunta","padding","backgroundImage","fontSize","Respuesta","respuesta","setRespuesta","f","backgroundColor","Reto","reto","App","setPersonas","Host","id","setPregunta","setReto","setResultados","setEmpatados","estado","setConectados","setTime","onbeforeunload","disconnect","c","t","p","res","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7313b921.chunk.js","sourcesContent":["import { React, useEffect, useState } from 'react';\r\n\r\n\r\nexport const mapObject = (obj, f) => {\r\n    Object.keys(obj).map(f);\r\n}\r\n\r\nexport const useSized = () => {\r\n    const [size, setSize] = useState({ width: window.innerWidth, height: window.innerHeight });\r\n\r\n    useEffect(() => {\r\n        const onResize = () => {\r\n            setSize({ width: window.innerWidth, height: window.innerHeight });\r\n        }\r\n\r\n        window.addEventListener('resize', onResize);\r\n\r\n        return () => window.removeEventListener('resize', onResize);\r\n    })\r\n\r\n    return size;\r\n}\r\n\r\nexport const Timer = ({ time }) => {\r\n    return (\r\n        <div style={{ background: \"#fdf7e3\", position: \"sticky\", top: \"0\", right: \"0\", width: \"10%\", height: \"10%\" }}>\r\n            {\r\n                time\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Grid = ({ columnas, children }) => {\r\n\r\n    return (\r\n        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + columnas + \", 1fr)\", gridGap: \"20px\" }}>\r\n            {\r\n                children\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Row = ({ children }) => {\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyItems: \"center\" }}>\r\n            {\r\n                children\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Column = ({ children }) => {\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyItems: \"center\" }}>\r\n            {\r\n                children\r\n            }\r\n        </div>\r\n    )\r\n}","import io from \"socket.io-client\";\r\n\r\nexport const socket = io();","import { React, useEffect } from 'react';\r\nimport { Grid } from \"./grid\"\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { socket } from './socket';\r\n\r\nexport const Inicio = ({ personas, conectados, setId, setEstado }) => {\r\n    const movil = useMediaQuery({ query: \"(max-width: 1224px)\" });\r\n    const portrait = useMediaQuery({ query: \"(orientation: portrait)\" });\r\n\r\n    useEffect(() => {\r\n        socket.once(\"conexion aceptada\", (e) => {\r\n            setId(e); setEstado(\"esperando\");\r\n        })\r\n    })\r\n\r\n    return (\r\n        <Grid columnas={movil && portrait ? 2 : 5}>\r\n            {\r\n                personas.map((elem) => {\r\n                    const disponible = !conectados.includes(elem);\r\n\r\n                    return (\r\n                        <button key={elem}\r\n                            onClick={() => { if (disponible) { socket.emit(\"conectar\", elem); } }}\r\n                            style={{ aspectRatio: \"1/1\", textDecoration: disponible ? \"none\" : \"line-through\" }}>\r\n                            {elem}\r\n                        </button>\r\n                    )\r\n                })\r\n            }\r\n        </Grid>\r\n    )\r\n}","import { React, useState, useEffect } from 'react';\r\nimport { Grid, } from './grid';\r\nimport { socket } from './socket';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nexport const Espera = ({ isHost, conectados, setId, setEstado }) => {\r\n\r\n    const [pool, setPool] = useState(\"normales\");\r\n    let [tipos, setTipos] = useState([])\r\n\r\n\r\n    const movil = useMediaQuery({ query: \"(max-width: 1224px)\" });\r\n    const portrait = useMediaQuery({ query: \"(orientation: portrait)\" });\r\n\r\n    useEffect(() => {\r\n        fetch(\"/pools\").then(response => response.json()).then(data => setTipos(data))\r\n\r\n        socket.on(\"set pool\", setPool)\r\n\r\n        const desconectar = () => {\r\n            setId(\"\");\r\n            setEstado(\"eligiendo\");\r\n        }\r\n        socket.on(\"desconectado\", desconectar)\r\n\r\n        return () => { socket.off(\"set pool\", setPool); socket.off(\"desconectado\", desconectar) }\r\n    }, [setId, setEstado])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid columnas={movil && portrait ? 2 : 5}>\r\n                {\r\n                    conectados.map((elem) => {\r\n                        return (\r\n                            <button key={elem}\r\n                                style={{ aspectRatio: \"1/1\" }}>\r\n                                {elem}\r\n                            </button>\r\n                        )\r\n                    })\r\n                }\r\n            </Grid>\r\n            <p>\r\n                <button onClick={() => { socket.emit(\"desconectar\"); }}>Cancelar</button>\r\n                {isHost &&\r\n                    <div>\r\n                        <button onClick={() => { socket.emit(\"set pool\", pool); socket.emit(\"start round\") }}>\r\n                            Empezar\r\n                        </button>\r\n                        <select onChange={(event) => { setPool(event.target.value) }}>\r\n                            {\r\n                                tipos.map((elem) => {\r\n                                    return (<option key={elem}>{elem}</option>)\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                }\r\n            </p>\r\n        </div>\r\n\r\n    )\r\n}","import { React, useState, useEffect } from 'react';\r\nimport { socket } from './socket';\r\n\r\nexport const Resultados = ({ resultados, empatados, isHost }) => {\r\n\tresultados.sort((a, b) => b.votos - a.votos);\r\n\r\n\tconst max = resultados[0].votos;\r\n\tconst unidad = window.innerWidth / (max + 2);\r\n\r\n\tconst [quedanPreguntas, setQuedanPreguntas] = useState(false);\r\n\tconst [hayEmpatePersonalizado, sethayEmpatePersonalizado] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.scrollTo(0, 0) // queremos ver el top  siempre al principio, por eso reseteo el scroll\r\n\r\n\t\tfetch(\"/preguntasRestantes\").then(response => response.json()).then(data => {\r\n\t\t\tsetQuedanPreguntas(data > 0)\r\n\t\t})\r\n\r\n\t\tfetch(\"/empates\").then(response => response.json()).then(data => {\r\n\t\t\tlet property = empatados.map(e => e.nombre).sort().join(\"\")\r\n\t\t\tsethayEmpatePersonalizado(data.hasOwnProperty(property))\r\n\t\t})\r\n\t}, [empatados])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n\t\t\t\t{\r\n\t\t\t\t\tresultados.map((elem, idx) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div key={elem.nombre} style={{ textAlign: \"center\", display: \"flex\", flexDirection: \"row\", width: \"100%\", margin: \"1em\" }}>\r\n\t\t\t\t\t\t\t\t<p style={{ width: unidad }}>{elem.nombre + (idx === 0 ? \"🥇\" : idx === 1 ? \"🥈\" : idx === 2 ? \"🥉\" : \"\")}</p>\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\twidth: unidad * max\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t<div style={{ width: unidad * elem.votos, height: \"100%\", background: \"#07820b\", borderRadius: \"25px\" }}></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<p style={{ width: unidad }}>{elem.votos}</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t{isHost && quedanPreguntas && <button onClick={() => socket.emit(\"start round\")}>Siguiente</button>}\r\n\t\t\t{isHost && empatados.length > 0 && <button onClick={() => socket.emit(\"start challenge\")}>Reto</button>}\r\n\t\t\t{isHost && hayEmpatePersonalizado && <button onClick={() => socket.emit(\"start custom challenge\", empatados.map(e => e.nombre).sort().join(\"\"))}>Reto personalizado</button>}\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport { Timer } from './grid';\r\n\r\nexport const Pregunta = ({ pregunta, time }) => {\r\n    return (\r\n        <div >\r\n            <Timer time={time}></Timer>\r\n\r\n            <p style={{ borderRadius: \"25px\", top: \"40%\", padding: \"2em\", textAlign: \"center\", backgroundImage: \"url(./bush.png)\", fontSize: \"larger\" }}>\r\n                <h1>Pregunta:</h1>\r\n                <h2> {pregunta} </h2>\r\n            </p>\r\n        </div>\r\n    )\r\n}","import { React, useState, useEffect } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { Timer, Grid } from './grid';\r\nimport { socket } from './socket';\r\n\r\nexport const Respuesta = ({ time, conectados, setEstado }) => {\r\n    const [respuesta, setRespuesta] = useState(\"\");\r\n\r\n    const movil = useMediaQuery({ query: \"(max-width: 1224px)\" });\r\n    const portrait = useMediaQuery({ query: \"(orientation: portrait)\" });\r\n\r\n    useEffect(() => {\r\n        const f = () => {\r\n            socket.emit(\"respuesta\", respuesta);\r\n            setEstado(\"resultado\")\r\n        }\r\n        socket.once(\"pedir respuestas\", f)\r\n\r\n        return () => socket.off(\"pedir respuestas\", f)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Timer time={time}></Timer>\r\n\r\n            <h1>Introduce la respuesta</h1>\r\n\r\n            <Grid columnas={movil && portrait ? 2 : 5}>\r\n                {\r\n                    conectados.map((elem) => {\r\n                        return (\r\n                            <button key={elem}\r\n                                style={{ aspectRatio: \"1/1\", backgroundColor: elem === respuesta ? 'green' : 'rgb(239, 239, 239)' }}\r\n                                onClick={() => setRespuesta(elem)}>\r\n                                {elem}\r\n                            </button>\r\n                        )\r\n                    })\r\n                }\r\n            </Grid>\r\n        </div>\r\n    )\r\n}","import { React, useState, useEffect } from 'react';\r\nimport { socket } from './socket';\r\n\r\nexport const Reto = ({ isHost, reto }) => {\r\n\r\n\tconst [quedanPreguntas, setQuedanPreguntas] = useState(false);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(\"/preguntasRestantes\").then(response => response.json()).then(data => {\r\n\t\t\tsetQuedanPreguntas(data > 0)\r\n\t\t})\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div >\r\n\t\t\t<p style={{ borderRadius: \"25px\", top: \"40%\", padding: \"2em\", textAlign: \"center\", backgroundImage: \"url(./bush.png)\", fontSize: \"larger\" }}>\r\n\t\t\t\t<h1>Reto:</h1>\r\n\t\t\t\t<h2> {reto} </h2>\r\n\t\t\t\t{isHost && quedanPreguntas && <button onClick={() => socket.emit(\"start round\")}>Siguiente</button>}\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t)\r\n}","import { React, useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Inicio } from \"./pantalla-inicio\"\nimport { Espera } from \"./pantalla-espera\"\nimport { Resultados } from \"./pantalla-resultados\"\nimport { Pregunta } from './pantalla-pregunta';\nimport { Respuesta } from './pantalla-respuesta';\nimport { socket } from './socket';\nimport { Reto } from './pantalla-reto';\n\n\nconst App = () => {\n  const [personas, setPersonas] = useState([]);\n  const Host = \"Carlos\"\n\n  const [id, setId] = useState(\"\");\n  const [pregunta, setPregunta] = useState(\"\");\n  const [reto, setReto] = useState(\"\");\n  const [resultados, setResultados] = useState([]);\n  const [empatados, setEmpatados] = useState([]);\n  const [estado, setEstado] = useState(\"eligiendo\");\n  const [conectados, setConectados] = useState([]);\n\n  const [time, setTime] = useState(5)\n\n  useEffect(() => {\n\n    fetch(\"/usuarios\").then(response => response.json()).then(data => setPersonas(data))\n\n    window.onbeforeunload = () => {\n      socket.disconnect()\n    }\n\n    socket.on(\"set conectados\", (c) => {\n      setConectados(c)\n    })\n\n    socket.on(\"time left\", (t) => {\n      setTime(t)\n    })\n    socket.on(\"timer done\", () => {\n      setEstado(\"respuesta\")\n    })\n\n\n    socket.on(\"set pregunta\", (p) => {\n      setPregunta(p)\n      setEstado(\"pregunta\")\n    })\n    socket.on(\"set resultados\", (res) => {\n      setResultados(res)\n    })\n    socket.on(\"set empatados\", (res) => {\n      setEmpatados(res)\n    })\n    socket.on(\"set reto\", (res) => {\n      setReto(res)\n      setEstado(\"reto\")\n      setEmpatados([]) // Lo reseteo aqui porque ya tenemos el reto y si no vuelve a salir el boton otra vez \n    })\n  }, []);\n\n  if (estado === \"eligiendo\") return (<Inicio personas={personas} conectados={conectados} setId={setId} setEstado={setEstado}></Inicio>)\n  if (estado === \"esperando\") return (<Espera conectados={conectados} isHost={id === Host} setId={setId} setEstado={setEstado}></Espera>)\n  if (estado === \"pregunta\") return (<Pregunta pregunta={pregunta} time={time}></Pregunta>)\n  if (estado === \"respuesta\") return (<Respuesta time={time} conectados={personas} setEstado={setEstado}></Respuesta>)\n  if (estado === \"resultado\") return (<Resultados resultados={resultados} empatados={empatados} isHost={id === Host}></Resultados>)\n  if (estado === \"reto\") return (<Reto reto={reto} isHost={id === Host}></Reto>)\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}