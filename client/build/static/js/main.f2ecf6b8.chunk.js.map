{"version":3,"sources":["grid.js","socket.js","pantalla-inicio.js","pantalla-espera.js","pantalla-resultados.js","pantalla-pregunta.js","pantalla-respuesta.js","index.js"],"names":["Timer","time","style","background","position","top","right","width","height","Grid","columnas","children","display","gridTemplateColumns","gridGap","Column","flexDirection","alignItems","justifyItems","socket","io","Inicio","personas","conectados","setId","setEstado","movil","useMediaQuery","query","portrait","useEffect","once","e","map","elem","disponible","includes","onClick","emit","aspectRatio","textDecoration","Espera","isHost","useState","Normales","Rapidas","Lentas","Dobles","Random","pools","setPools","fetch","then","response","json","data","on","desconectar","off","Object","keys","Resultados","resultados","sort","a","b","votos","max","unidad","window","innerWidth","quedanPreguntas","setQuedanPreguntas","length","console","log","textAlign","margin","nombre","borderRadius","Pregunta","pregunta","backgroundImage","Respuesta","respuesta","setRespuesta","f","color","App","Host","id","setPregunta","setResultados","estado","setConectados","setTime","onbeforeunload","send","c","t","p","res","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2ecf6b8.chunk.js","sourcesContent":["import { React, useEffect, useState } from 'react';\r\n\r\n\r\nexport const mapObject = (obj, f) => {\r\n    Object.keys(obj).map(f);\r\n}\r\n\r\nexport const useSized = () => {\r\n    const [size, setSize] = useState({ width: window.innerWidth, height: window.innerHeight });\r\n\r\n    useEffect(() => {\r\n        const onResize = () => {\r\n            setSize({ width: window.innerWidth, height: window.innerHeight });\r\n        }\r\n\r\n        window.addEventListener('resize', onResize);\r\n\r\n        return () => window.removeEventListener('resize', onResize);\r\n    })\r\n\r\n    return size;\r\n}\r\n\r\nexport const Timer = ({ time }) => {\r\n    return (\r\n        <div style={{ background: \"#fdf7e3\", position: \"absolute\", top: \"0\", right: \"0\", width: \"3%\", height: \"3%\" }}>\r\n            {\r\n                time\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Grid = ({ columnas, children }) => {\r\n\r\n    return (\r\n        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + columnas + \", 1fr)\", gridGap: \"2em\" }}>\r\n            {\r\n                children\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Row = ({ children }) => {\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyItems: \"center\" }}>\r\n            {\r\n                children\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Column = ({ children }) => {\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyItems: \"center\" }}>\r\n            {\r\n                children\r\n            }\r\n        </div>\r\n    )\r\n}","import io from \"socket.io-client\";\r\n\r\nexport const socket = io();","import { React, useEffect } from 'react';\r\nimport { Grid } from \"./grid\"\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { socket } from './socket';\r\n\r\nexport const Inicio = ({ personas, conectados, setId, setEstado }) => {\r\n    const movil = useMediaQuery({ query: \"(max-width: 1224px)\" });\r\n    const portrait = useMediaQuery({ query: \"(orientation: portrait)\" });\r\n\r\n    useEffect(() => {\r\n        socket.once(\"conexion aceptada\", (e) => {\r\n            setId(e); setEstado(\"esperando\");\r\n        })\r\n    })\r\n\r\n    return (\r\n        <Grid columnas={movil && portrait ? 2 : 5}>\r\n            {\r\n                personas.map((elem) => {\r\n                    const disponible = !conectados.includes(elem);\r\n\r\n                    return (\r\n                        <button key={elem}\r\n                            onClick={() => { if (disponible) { socket.emit(\"conectar\", elem); } }}\r\n                            style={{ aspectRatio: \"1/1\", textDecoration: disponible ? \"none\" : \"line-through\" }}>\r\n                            {elem}\r\n                        </button>\r\n                    )\r\n                })\r\n            }\r\n        </Grid>\r\n    )\r\n}","import { React, useState, useEffect } from 'react';\r\nimport { Column, Grid, } from './grid';\r\nimport { socket } from './socket';\r\n\r\nexport const Espera = ({ isHost, conectados, setId, setEstado }) => {\r\n\r\n    const [pools, setPools] = useState({ Normales: false, Rapidas: false, Lentas: false, Dobles: false, Random: false });\r\n\r\n    useEffect(() => {\r\n        fetch(\"/pools\").then(response => response.json()).then(data => setPools(data))\r\n\r\n        socket.on(\"set pools\", setPools)\r\n\r\n        const desconectar = () => {\r\n            debugger;\r\n            setId(\"\");\r\n            setEstado(\"eligiendo\");\r\n        }\r\n        socket.on(\"desconectado\", desconectar)\r\n\r\n        return () => { socket.off(\"set pools\", setPools); socket.off(\"desconectado\", desconectar) }\r\n    }, [setId, setEstado])\r\n\r\n\r\n    return (\r\n        <Grid columnas={3}>\r\n            <Column>\r\n                {conectados.map((elem) => (<p key={elem} style={{ aspectRatio: \"1/1\" }}> {elem} </p>))}\r\n            </Column>\r\n            <Column>\r\n                <button onClick={() => { socket.emit(\"desconectar\"); }}>Cancelar</button>\r\n                {isHost && <button onClick={() => { socket.emit(\"set pool\", pools); socket.emit(\"start round\") }}>Empezar</button>}\r\n            </Column>\r\n            <Column>\r\n                {\r\n                    Object.keys(pools).map((elem) => {\r\n                        return (\r\n                            <button key={elem} onClick={() => {\r\n                                if (isHost) {\r\n                                    socket.emit(\"toggle pool\", elem);\r\n                                }\r\n                            }}\r\n                                style={{ textDecoration: pools[elem] ? \"none\" : \"line-through\" }}\r\n                            >\r\n                                {elem}\r\n                            </button>)\r\n                    })\r\n                }\r\n            </Column>\r\n        </Grid>\r\n    )\r\n}","import { React, useState, useEffect } from 'react';\r\nimport { socket } from './socket';\r\n\r\nexport const Resultados = ({ resultados, isHost }) => {\r\n\tresultados.sort((a, b) => b.votos - a.votos);\r\n\r\n\tconst max = resultados[0].votos;\r\n\tconst unidad = window.innerWidth / (max + 2);\r\n\r\n\tconst [quedanPreguntas, setQuedanPreguntas] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(\"/preguntas\").then(response => response.json()).then(data => {\r\n\t\t\tsetQuedanPreguntas(data.length > 0)\r\n\t\t\tconsole.log(data)\r\n\t\t})\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n\t\t\t\t{\r\n\t\t\t\t\tresultados.map((elem) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div key={elem.nombre} style={{ textAlign: \"center\", display: \"flex\", flexDirection: \"row\", width: \"100%\", margin: \"1em\" }}>\r\n\t\t\t\t\t\t\t\t<p style={{ width: unidad }}>{elem.nombre}</p>\r\n\t\t\t\t\t\t\t\t<div style={{ width: unidad * elem.votos, background: \"#07820b\", borderRadius: \"25px\" }}></div>\r\n\t\t\t\t\t\t\t\t<p style={{ width: unidad }}>{elem.votos}</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t{isHost && quedanPreguntas && <button onClick={() => socket.emit(\"start round\")}>Siguiente</button>}\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport { Timer } from './grid';\r\n\r\nexport const Pregunta = ({ pregunta, time }) => {\r\n    return (\r\n        <div >\r\n            <div style={{ borderRadius: \"25px\", backgroundImage: \"url(./bush.png)\", textAlign: \"center\", display: \"flex\", alignItems: \"center\", justifyItems: \"center\", flexDirection: \"column\" }}>\r\n                <h1>Pregunta:</h1>\r\n                <h2> {pregunta} </h2>\r\n            </div>\r\n            <Timer time={time}></Timer>\r\n        </div>\r\n    )\r\n}","import { React, useState, useEffect } from 'react';\r\nimport { Timer } from './grid';\r\nimport { socket } from './socket';\r\n\r\nexport const Respuesta = ({ time, personas, setEstado }) => {\r\n    const [respuesta, setRespuesta] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const f = () => {\r\n            socket.emit(\"respuesta\", respuesta);\r\n            setEstado(\"resultado\")\r\n        }\r\n        socket.once(\"pedir respuestas\", f)\r\n\r\n        return () => socket.off(\"pedir respuestas\", f)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Timer time={time}></Timer>\r\n\r\n            <h1>Introduce la respuesta</h1>\r\n            <ul>\r\n                {\r\n                    personas.map((elem) => {\r\n                        return (\r\n                            <li key={elem}>\r\n                                <button onClick={() => setRespuesta(elem)} style={{ color: elem === respuesta ? 'green' : 'black' }}>\r\n                                    {elem}\r\n                                </button>\r\n                            </li>)\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import { React, useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Inicio } from \"./pantalla-inicio\"\nimport { Espera } from \"./pantalla-espera\"\nimport { Resultados } from \"./pantalla-resultados\"\nimport { Pregunta } from './pantalla-pregunta';\nimport { Respuesta } from './pantalla-respuesta';\nimport { socket } from './socket';\n\n\nconst App = () => {\n  const personas = [\"Raul\", \"Carlos\", \"Elo\", \"Cabriada\", \"Kanian\", \"Morilla\", \"Candy\", \"Carmen\", \"Dan\", \"Isa\"];\n  const Host = \"Carlos\"\n\n  const [id, setId] = useState(\"\");\n  const [pregunta, setPregunta] = useState(\"\");\n  const [resultados, setResultados] = useState([]);\n  const [estado, setEstado] = useState(\"eligiendo\");\n  const [conectados, setConectados] = useState([]);\n\n  const [time, setTime] = useState(5)\n\n  useEffect(() => {\n\n    window.onbeforeunload = () => {\n      socket.send(\"desconectar\")\n    }\n\n    socket.on(\"set conectados\", (c) => {\n      setConectados(c)\n    })\n\n    socket.on(\"time left\", (t) => {\n      setTime(t)\n    })\n    socket.on(\"timer done\", () => {\n      setEstado(\"respuesta\")\n    })\n\n\n    socket.on(\"set pregunta\", (p) => {\n      setPregunta(p)\n      setEstado(\"pregunta\")\n    })\n    socket.on(\"set resultados\", (res) => {\n      setResultados(res)\n    })\n  });\n\n  if (estado === \"eligiendo\") return (<Inicio personas={personas} conectados={conectados} setId={setId} setEstado={setEstado}></Inicio>)\n  if (estado === \"esperando\") return (<Espera conectados={conectados} isHost={id === Host} setId={setId} setEstado={setEstado}></Espera>)\n  if (estado === \"pregunta\") return (<Pregunta pregunta={pregunta} time={time}></Pregunta>)\n  if (estado === \"respuesta\") return (<Respuesta time={time} personas={personas} setEstado={setEstado}></Respuesta>)\n  if (estado === \"resultado\") return (<Resultados resultados={resultados} isHost={id === Host}></Resultados>)\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}